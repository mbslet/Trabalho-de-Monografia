@ARTICLE{7503513,
  author={Oulasvirta, Antti and Abowd, Gregory D.},
  journal={Computer}, 
  title={User Interface Design in the 21st Century}, 
  year={2016},
  volume={49},
  number={7},
  pages={11-13},
  doi={10.1109/MC.2016.201}}
  
@article{10.1145/333329.333332,
author = {McInerney, Paul and Sobiesiak, Rick},
title = {The UI Design Process},
year = {2000},
issue_date = {Jan. 2000},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {32},
number = {1},
issn = {0736-6906},
url = {https://doi.org/10.1145/333329.333332},
doi = {10.1145/333329.333332},
abstract = {The root cause of many user interface (UI) design deficiencies is not a lack of knowledge
about human-computer interaction principles nor a lack of information on user needs.
Rather, many UI deficiencies arise because the UI design process is ad hoc and the
design is not communicated successfully to the programmers who will implement it.
Many UI designers are seeking and discovering ways to plan, manage, and document UI
design work more effectively. This workshop provided an opportunity for participants
to share lessons learned and obtain advice from other participants.In the weeks leading
up to the workshop, participants selected the specific topics that were of prime concern
to them. As a result, we narrowed the focus of the workshop to the following topics:•
Division of UI design activities into stages• Division of labor and interdisciplinary
collaboration• Collaborating in geographically-dispersed projects• Writing
the UI specification• Defining the maturity of the UI design process.The following
sections summarize the results of the workshop activities for each of these topics.},
journal = {SIGCHI Bull.},
month = jan,
pages = {17–21},
numpages = {5}
}


@inproceedings{10.1145/2448963.2448965,
author = {Van Ryseghem, Benjamin and Ducasse, St\'{e}phane and Fabry, Johan},
title = {Spec: A Framework for the Specification and Reuse of UIs and Their Models},
year = {2012},
isbn = {9781450318976},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2448963.2448965},
doi = {10.1145/2448963.2448965},
abstract = {Implementing UIs is often a tedious task. To address this, UI Builders have been proposed
to support the description of widgets, their location, and their logic. A missing
aspect of UI Builders is however the ability to reuse and compose widget logic. In
our experience, this leads to a significant amount of duplication in UI code. To address
this issue, we built Spec: a UIBuilder for Pharo with a focus on reuse. With Spec,
widget properties are defined declaratively and attached to specific classes known
as composable classes. A composable class defines its own widget description as well
as the model-widget bridge and widget interaction logic. This paper presents Spec,
showing how it enables seamless reuse of widgets and how these can be customized.
After presenting Spec and its implementation, we discuss how its use in Pharo 2.0
has cut in half the amount of lines of code of six of its tools, mostly through reuse.
This shows that Spec meets its goals of allowing reuse and composition of widget logic.},
booktitle = {Proceedings of the International Workshop on Smalltalk Technologies},
articleno = {2},
numpages = {14},
location = {Ghent, Belgium},
series = {IWST '12}
}

@ARTICLE{6188603,
  author={Spinellis, Diomidis},
  journal={IEEE Software}, 
  title={Git}, 
  year={2012},
  volume={29},
  number={3},
  pages={100-101},
  doi={10.1109/MS.2012.61}}
  
 @INPROCEEDINGS{7740497,
    author={Bleiel, Nicky}, 
    booktitle={2016 IEEE International Professional Communication Conference (IPCC)}, 
    title={Collaborating in GitHub},  
    year={2016}, 
    volume={}, 
    number={}, 
    pages={1-3}, 
    doi={10.1109/IPCC.2016.7740497}}